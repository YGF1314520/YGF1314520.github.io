(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{570:function(t,s,r){"use strict";r.r(s);var v=r(52),a=Object(v.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"边框线与轮廓线"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#边框线与轮廓线"}},[t._v("#")]),t._v(" 边框线与轮廓线")]),t._v(" "),r("h2",{attrs:{id:"_1-【border】边框-布局时会占用空间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-【border】边框-布局时会占用空间"}},[t._v("#")]),t._v(" 1.【border】边框（布局时会占用空间）")]),t._v(" "),r("h3",{attrs:{id:"【border】设置边框"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#【border】设置边框"}},[t._v("#")]),t._v(" 【border】设置边框")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("    border: 边框线宽度（px） 边框类型 边框颜色;\n")])])]),r("h4",{attrs:{id:"边框方向-border"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#边框方向-border"}},[t._v("#")]),t._v(" 边框方向(border)")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("【border-top】上边框\n【border-right】右边框\n【border-left】 左边框\n【border-bottom】下边框\n")])])]),r("h4",{attrs:{id:"边框线宽度-border-width-一般直接写-px-各个方向的边框各自设定"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#边框线宽度-border-width-一般直接写-px-各个方向的边框各自设定"}},[t._v("#")]),t._v(" 边框线宽度（border-width）[一般直接写：px,各个方向的边框各自设定]")]),t._v(" "),r("p",[t._v("可以设置一到"),r("strong",[t._v("四个值")]),t._v("（用于"),r("strong",[t._v("上边框")]),t._v("、"),r("strong",[t._v("右边框")]),t._v("、"),r("strong",[t._v("下边框")]),t._v("和"),r("strong",[t._v("左边框")]),t._v("）:")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("【thin】定义细的边框。\n【medium】默认。定义中等的边框。\n【thick】定义粗的边框。\n")])])]),r("h3",{attrs:{id:"统一设置格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#统一设置格式"}},[t._v("#")]),t._v(" 统一设置格式：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("border-width: 上 右 下 左;\nborder-width: 上下 左右;\n")])])]),r("h4",{attrs:{id:"边框类型-border-style"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#边框类型-border-style"}},[t._v("#")]),t._v(" 边框类型(border-style):")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("【参数值】")]),t._v(" "),r("p",[t._v("【solid】实线")]),t._v(" "),r("p",[t._v("【dotted】点线")]),t._v(" "),r("p",[t._v("【dashed】虚线")]),t._v(" "),r("p",[t._v("【groove】定义 3D 坡口边框。效果取决于 border-color 值（立方盒子，如水槽）")]),t._v(" "),r("p",[t._v("【ridge】定义 3D 脊线边框。效果取决于 border-color 值（空心梯台）")]),t._v(" "),r("p",[t._v("【inset】定义 3D inset 边框。效果取决于 border-color 值 （向内边框，如房子地面）")]),t._v(" "),r("p",[t._v("【outset】定义 3D outset 边框。效果取决于 border-color 值 （向外边框，如房子墙）")]),t._v(" "),r("p",[t._v("【none】定义无边框")]),t._v(" "),r("p",[t._v("【hidden】定义隐藏边框")])]),t._v(" "),r("p",[r("strong",[t._v("也可以设置各个方向的样式")]),t._v("：（"),r("strong",[t._v("依然遵循:上 右 下 左")]),t._v("）")]),t._v(" "),r("div",{staticClass:"language-css extra-class"},[r("pre",{pre:!0,attrs:{class:"language-css"}},[r("code",[r("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dotted solid double dashed"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("ul",[r("li",[t._v("上边框是虚线")]),t._v(" "),r("li",[t._v("右边框是实线")]),t._v(" "),r("li",[t._v("下边框是双线")]),t._v(" "),r("li",[t._v("左边框是虚线")])]),t._v(" "),r("p",[r("strong",[t._v("如果 border-style 属性设置三个值：（依然遵循:上 左右 下）")])]),t._v(" "),r("div",{staticClass:"language-css extra-class"},[r("pre",{pre:!0,attrs:{class:"language-css"}},[r("code",[r("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dotted solid double"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("ul",[r("li",[t._v("上边框是虚线")]),t._v(" "),r("li",[t._v("右和左边框是实线")]),t._v(" "),r("li",[t._v("下边框是双线")])]),t._v(" "),r("p",[r("strong",[t._v("如果 border-style 属性设置两个值：（依然遵循:上下 左右）")])]),t._v(" "),r("div",{staticClass:"language-css extra-class"},[r("pre",{pre:!0,attrs:{class:"language-css"}},[r("code",[r("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dotted solid"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("ul",[r("li",[t._v("上和下边框是虚线")]),t._v(" "),r("li",[t._v("右和左边框是实线")])]),t._v(" "),r("p",[r("strong",[t._v("如果 border-style 属性设置一个值：（依然遵循:都是一样的，默认）")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("border-style: dotted;\n")])])]),r("ul",[r("li",[t._v("四条边均为虚线")])]),t._v(" "),r("h4",{attrs:{id:"边框颜色-border-color"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#边框颜色-border-color"}},[t._v("#")]),t._v(" 边框颜色(border-color)")]),t._v(" "),r("p",[t._v("可以设置一到"),r("strong",[t._v("四个值")]),t._v("（用于"),r("strong",[t._v("上边框")]),t._v("、"),r("strong",[t._v("右边框")]),t._v("、"),r("strong",[t._v("下边框")]),t._v("和"),r("strong",[t._v("左边框")]),t._v("）。")]),t._v(" "),r("p",[t._v("例如：border-color: red green yellow pink;")]),t._v(" "),r("h4",{attrs:{id:"圆角边框-border-radius"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#圆角边框-border-radius"}},[t._v("#")]),t._v(" 圆角边框（border-radius）")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("【参数值】")]),t._v(" "),r("p",[t._v("【px】圆角的形状。")]),t._v(" "),r("p",[t._v("【%】以百分比定义圆角的形状。")])]),t._v(" "),r("p",[r("strong",[t._v("设置方式")]),t._v("：")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("一个值")]),t._v("： "),r("strong",[t._v("四个圆角值相同")])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("两个值")]),t._v(": 第一个值为"),r("strong",[t._v("左上角")]),t._v("与"),r("strong",[t._v("右下角")]),t._v("，第二个值为"),r("strong",[t._v("右上角")]),t._v("与"),r("strong",[t._v("左下角")]),t._v(" "),r("em",[r("strong",[t._v("（交叉记忆：左上右下 右上左下）")])])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("三个值")]),t._v(": 第一个值为"),r("strong",[t._v("左上角")]),t._v(", 第二个值为"),r("strong",[t._v("右上角")]),t._v("和"),r("strong",[t._v("左下角")]),t._v("，第三个值为"),r("strong",[t._v("右下角")]),t._v(" "),r("em",[r("strong",[t._v("（Z字形： 左上 右上左下 右下）")])])])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("四个值")]),t._v(": 第一个值为"),r("strong",[t._v("左上角")]),t._v("，第二个值为"),r("strong",[t._v("右上角")]),t._v("，第三个值为"),r("strong",[t._v("右下角")]),t._v("，第四个值为"),r("strong",[t._v("左下角")]),t._v("。\n"),r("em",[r("strong",[t._v("（顺时针：左上 右上 右下 左下）")])])])])]),t._v(" "),r("p",[r("strong",[t._v("也可以单独设置一角的弧度")])]),t._v(" "),r("p",[r("strong",[t._v("左上角")]),t._v("的弧度：【"),r("code",[t._v("border-top-left-radius")]),t._v("】")]),t._v(" "),r("p",[r("strong",[t._v("右上角")]),t._v("的弧度：【"),r("code",[t._v("border-top-right-radius")]),t._v("】")]),t._v(" "),r("p",[r("strong",[t._v("左下角")]),t._v("的弧度：【"),r("code",[t._v("border-bottom-left-radius")]),t._v("】")]),t._v(" "),r("p",[r("strong",[t._v("右下角")]),t._v("的弧度：【"),r("code",[t._v("border-bottom-right-radius")]),t._v("】")]),t._v(" "),r("h2",{attrs:{id:"_2-【outline】轮廓线-不影响布局"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-【outline】轮廓线-不影响布局"}},[t._v("#")]),t._v(" 2.【outline】轮廓线（不影响布局）")]),t._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),r("p",[r("strong",[t._v("轮廓")]),t._v("与"),r("strong",[t._v("边框不同")]),t._v("！")]),t._v(" "),r("p",[r("strong",[t._v("不同之处")]),t._v("在于："),r("strong",[t._v("轮廓是在元素边框之外")]),t._v("绘制的，并且"),r("strong",[t._v("可能与其他内容重叠")]),t._v("。同样，轮廓也"),r("strong",[t._v("不是元素尺寸")]),t._v("的一部分；"),r("strong",[t._v("元素的总宽度和高度不受轮廓线宽度的影响")]),t._v("。")])]),t._v(" "),r("h3",{attrs:{id:"【outline】设置轮廓"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#【outline】设置轮廓"}},[t._v("#")]),t._v(" 【outline】设置轮廓")]),t._v(" "),r("p",[r("strong",[t._v("轮廓")]),t._v("是在"),r("strong",[t._v("元素周围")]),t._v("绘制的"),r("strong",[t._v("一条线")]),t._v("，在"),r("strong",[t._v("边框")]),t._v("之外，以"),r("strong",[t._v("凸显元素")]),t._v("。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("    outline: 轮廓线宽度（px） 轮廓类型 轮廓颜色;\n")])])]),r("h4",{attrs:{id:"轮廓线宽度-outline-width-跟边框一样-也可以设置为px"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#轮廓线宽度-outline-width-跟边框一样-也可以设置为px"}},[t._v("#")]),t._v(" 轮廓线宽度（outline-width）:[跟边框一样，也可以设置为px]")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("【thin】通常为 1px。\n【medium】通常为 3px。\n【thick】通常为 5px。\n")])])]),r("h4",{attrs:{id:"轮廓线类型-outline-style-与边框一致"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#轮廓线类型-outline-style-与边框一致"}},[t._v("#")]),t._v(" 轮廓线类型(outline-style):[与边框一致]")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("【参数值】")]),t._v(" "),r("p",[t._v("【solid】实线")]),t._v(" "),r("p",[t._v("【dotted】点线")]),t._v(" "),r("p",[t._v("【dashed】虚线")]),t._v(" "),r("p",[t._v("【groove】定义 3D 坡口边框。效果取决于 border-color 值（立方盒子，如水槽）")]),t._v(" "),r("p",[t._v("【ridge】定义 3D 脊线边框。效果取决于 border-color 值（空心梯台）")]),t._v(" "),r("p",[t._v("【inset】定义 3D inset 边框。效果取决于 border-color 值 （向内边框，如房子地面）")]),t._v(" "),r("p",[t._v("【outset】定义 3D outset 边框。效果取决于 border-color 值 （向外边框，如房子墙）")]),t._v(" "),r("p",[t._v("【none】定义无边框")]),t._v(" "),r("p",[t._v("【hidden】定义隐藏边框")])]),t._v(" "),r("h4",{attrs:{id:"轮廓颜色-outline-color-跟边框相同"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#轮廓颜色-outline-color-跟边框相同"}},[t._v("#")]),t._v(" 轮廓颜色(outline-color):[跟边框相同]")]),t._v(" "),r("h4",{attrs:{id:"【invert】反转颜色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#【invert】反转颜色"}},[t._v("#")]),t._v(" 【invert】反转颜色")]),t._v(" "),r("p",[r("strong",[t._v("颜色反转")]),t._v("。这样可以确保"),r("strong",[t._v("无论颜色背景")]),t._v("如何，"),r("strong",[t._v("轮廓")]),t._v("都"),r("strong",[t._v("是可见的")])]),t._v(" "),r("div",{staticClass:"language-css extra-class"},[r("pre",{pre:!0,attrs:{class:"language-css"}},[r("code",[t._v("    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v("outline-color")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" invert"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);