(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{462:function(s,t,a){"use strict";a.r(t);var n=a(52),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"流程控制语句【if-else、switch-case】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程控制语句【if-else、switch-case】"}},[s._v("#")]),s._v(" 流程控制语句【if else、switch case】")]),s._v(" "),a("h2",{attrs:{id:"顺序结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序结构"}},[s._v("#")]),s._v(" 顺序结构")]),s._v(" "),a("p",[a("strong",[s._v("代码自上而下 执行")])]),s._v(" "),a("h2",{attrs:{id:"分支结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支结构"}},[s._v("#")]),s._v(" 分支结构")]),s._v(" "),a("p",[a("strong",[s._v("if else  switch case   符合条件才会执行 不符合就跳过")])]),s._v(" "),a("h3",{attrs:{id:"【if】判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【if】判断"}},[s._v("#")]),s._v(" 【if】判断：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("格式一  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 代码块\n                  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                            代码\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("格式二 \n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        代码"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("esle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        代码"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n       条件成立 执行代码"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  不成立 执行 代码"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("格式三\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        代码"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        代码"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        代码"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n                    esle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("strong",[s._v("条件一旦满足")]),s._v(" 后面的"),a("strong",[s._v("条件不会再继续判断")]),s._v(" 会"),a("strong",[s._v("直接跳过")]),s._v("这个"),a("strong",[s._v("分支语句")])]),s._v(" "),a("p",[a("strong",[s._v("键盘输入")]),s._v("的都是"),a("strong",[s._v("字符串类型")]),s._v("的 "),a("code",[s._v("1")]),s._v(" "),a("strong",[s._v("隐式转换")]),s._v("为"),a("strong",[s._v("数值类型")]),s._v("的")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("prompt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"请输入一个数字"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[a("strong",[s._v("【思考】")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里的代码为什么执行")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("() 条件  ---\x3e 表达式 ---\x3e 结果 ---\x3ejs基本数据类型 --隐士转化-> Boolean")])]),s._v(" "),a("h3",{attrs:{id:"【switch】判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【switch】判断"}},[s._v("#")]),s._v(" 【switch】判断：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("格式  key 值 去和 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v("后面的 vaule进行比较 如果相等就执行\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("code",[s._v("default")]),s._v(": "),a("strong",[s._v("默认")]),s._v("的 如果以上的"),a("code",[s._v("vaule")]),s._v("值"),a("strong",[s._v("都不符合")]),s._v(" 就"),a("strong",[s._v("走默认的")])]),s._v(" "),a("p",[a("strong",[s._v("break 可以终止switch")])]),s._v(" "),a("h2",{attrs:{id:"循环结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环结构"}},[s._v("#")]),s._v(" 循环结构")]),s._v(" "),a("p",[a("code",[s._v("for")]),s._v(" "),a("code",[s._v("while")]),s._v(" "),a("code",[s._v("do while")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("重复执行一段代码")])])])}),[],!1,null,null,null);t.default=e.exports}}]);